# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
    # The most common configuration options are documented and commented below.
    # For a complete reference, please see the online documentation at
    # https://docs.vagrantup.com.
  
    # Every Vagrant development environment requires a box. You can search for
    # boxes at https://vagrantcloud.com/search.
    config.vm.box = "ubuntu/focal64"
    # config.vm.box_check_update = false
    # config.vm.network "forwarded_port", guest: 80, host: 8080
    # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"
  
    # Create a private network, which allows host-only access to the machine
    # using a specific IP.  
    # config.vm.synced_folder "../data", "/vagrant_data"
    # config.vm.synced_folder ".", "/vagrant", disabled: true
    config.vm.define "auth" do |auth|

      auth.vm.network "private_network", ip: "192.168.33.11"
      auth.vm.synced_folder "../microservice-app-example/auth-api", "/home/vagrant/src"

      auth.vm.provider "virtualbox" do |vb|
        vb.name = "auth_vm"
      end
      
      auth.vm.provision "file", source: "id_rsa.pub", destination: "~/.ssh/authorized_keys"
    end

    config.vm.define "redis" do |redis|
      redis.vm.network "private_network", ip: "192.168.33.12"

      redis.vm.provider "virtualbox" do |vb|
        vb.name = "redis_vm"
      end

      redis.vm.provision "file", source: "id_rsa.pub", destination: "~/.ssh/authorized_keys"
    end

    config.vm.define "zipkin" do |zipkin|
      zipkin.vm.network "private_network", ip: "192.168.33.13"

      zipkin.vm.provider "virtualbox" do |vb|
        vb.name = "zipkin_vm"
      end

      zipkin.vm.provision "file", source: "id_rsa.pub", destination: "~/.ssh/authorized_keys"
    end

    config.vm.define "todos" do |todos|
      todos.vm.network "private_network", ip: "192.168.33.14"
      todos.vm.synced_folder "../microservice-app-example/todos-api", "/home/vagrant/src"

      todos.vm.provider "virtualbox" do |vb|
        vb.name = "todos_vm"
      end

      todos.vm.provision "file", source: "id_rsa.pub", destination: "~/.ssh/authorized_keys"
    end

    config.vm.define "users" do |users|
      users.vm.network "private_network", ip: "192.168.33.15"
      users.vm.synced_folder "../microservice-app-example/users-api", "/home/vagrant/src"

      users.vm.provider "virtualbox" do |vb|
        vb.name = "users_vm"
      end

      users.vm.provision "file", source: "id_rsa.pub", destination: "~/.ssh/authorized_keys"
    end

    config.vm.define "log_message_processor" do |lmp|
      lmp.vm.network "private_network", ip: "192.168.33.16"
      lmp.vm.synced_folder "../microservice-app-example/log-message-processor", "/home/vagrant/src"

      lmp.vm.provider "virtualbox" do |vb|
        vb.name = "lmp_vm"
      end

      lmp.vm.provision "file", source: "id_rsa.pub", destination: "~/.ssh/authorized_keys"
    end

    config.vm.define "frontend" do |frontend|
      frontend.vm.network "private_network", ip: "192.168.33.17"
      frontend.vm.synced_folder "../microservice-app-example/frontend", "/home/vagrant/src"

      frontend.vm.provider "virtualbox" do |vb|
        vb.name = "frontend_vm"
      end

      frontend.vm.provision "file", source: "id_rsa.pub", destination: "~/.ssh/authorized_keys"
    end

    # Example for VirtualBox:
    config.vm.provider "virtualbox" do |vb|
      # Display the VirtualBox GUI when booting the machine
      vb.gui = true
      vb.cpus = 1
      vb.memory = 1024
    end
  
  end